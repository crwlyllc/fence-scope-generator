(function(){const $=(e,t=document)=>t.querySelector(e),$$=(e,t=document)=>Array.from(t.querySelectorAll(e));const SEED={style:["Flat Top","Extended Picket","Extended Picket w/ Finials"],height:["3ft","4ft","5ft","6ft","8ft"],railSize:["1\u201D","1 \u00BC\u201D","1 \u00BD\u201D","1 \u00BE\u201D","1x2\u201D","2\u201D","3\u201D","Flat Bar 1/4\" x 1\""],picketSize:["1/2\u201D","5/8\u201D","3/4\u201D","1\u201D"],postSize:["2x2","3x3"],puppy:["None","Puppy Pickets","Puppy Pickets w/ Finials","Puppy Pickets Full Height","Puppy Pickets Full Height w/ Finials"]};const GATE={latchTypes:["Gravity Latch","Short Pool Latch","Tall Pool Latch","Single Lock Box","Double Lock Box"],hingeTypes:["Door Hinges","Bat Wing Hinges","Auto Close Hinges"]};const state={sections:[]};const sectionsEl=$("#sp-sections"),outputEl=$("#sp-output"),notesEl=$("#sp-notes"),notesSubEl=$("#sp-notes-sub");function uid(){return"sec_"+Math.random().toString(36).slice(2,9)}function escapeHtml(e){return String(e).replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function escapeAttr(e){return escapeHtml(e).replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function createSelect(e){return e.map(e=>`<option value="${escapeAttr(e)}">${escapeHtml(e)}</option>`).join("")}function numberControl(e,t="",n=0){return'<div class="sp-number" data-field="'+e+'"><button type="button" class="sp-step" data-dir="-1" aria-label="decrement">–</button><input type="number" inputmode="numeric" step="1" min="'+n+'" value="" placeholder="'+t+'" /><button type="button" class="sp-step" data-dir="1" aria-label="increment">+</button></div>'}function sectionTemplate(e,t){return`\n    <div class="sp-card" data-id="${e}">\n      <div class="sp-card-header">\n        <div class="sp-card-title">Section ${t+1}</div>\n        <div class="sp-row">\n          <button class="sp-btn ghost sp-toggle" type="button" aria-expanded="true">Collapse</button>\n          <button class="sp-btn ghost sp-dup" type="button">Duplicate</button>\n          <button class="sp-btn danger sp-del" type="button">Remove</button>\n        </div>\n      </div>\n      <div class="sp-grid">\n        <div class="sp-field col-6">\n          <label class="sp-label">Section Label (e.g., Front, Left Side, Pool Run)</label>\n          <input class="sp-input" data-field="label" placeholder="Enter a label" />\n        </div>\n        <div class="sp-field col-2">\n          <label class="sp-label">Style</label>\n          <select class="sp-select" data-field="style">${createSelect(SEED.style)}</select>\n        </div>\n        <div class="sp-field col-2">\n          <label class="sp-label">Height</label>\n          <select class="sp-select" data-field="height">${createSelect(SEED.height)}</select>\n        </div>\n        <div class="sp-field col-2">\n          <label class="sp-label">Post Size</label>\n          <select class="sp-select" data-field="postSize">${createSelect(SEED.postSize)}</select>\n        </div>\n        <div class="sp-field col-12" data-rails-wrap>\n          <div class="sp-rail-row" data-rails-row>\n            <div class="sp-field" data-rail-count>\n              <label class="sp-label">Rails</label>\n              <select class="sp-select" data-field="railsCount">\n                <option value="2">2 Rail</option>\n                <option value="3">3 Rail</option>\n                <option value="4">4 Rail</option>\n              </select>\n            </div>\n          </div>\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">Picket Size</label>\n          <select class="sp-select" data-field="picketSize">${createSelect(SEED.picketSize)}</select>\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">Picket Height (inches) — leave blank to auto-use fence height</label>\n          ${numberControl("picketHeight","e.g., 54")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">Puppy Pickets</label>\n          <select class="sp-select" data-field="puppy">${createSelect(SEED.puppy)}</select>\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">Painting</label>\n          <select class="sp-select" data-field="painting">\n            <option value="Paint Section">Paint Section</option>\n            <option value="Spot Paint Welds">Spot Paint Welds</option>\n            <option value="None">None</option>\n          </select>\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">Section Length (ft)</label>\n          ${numberControl("length","e.g., 48")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">LF Over Hardscape</label>\n          ${numberControl("hardscape","e.g., 12")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label">LF to Trim</label>\n          ${numberControl("trim","e.g., 6")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label"># Pickets to Replace</label>\n          ${numberControl("wiPickets","0")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label"># 2x2 Posts to Replace</label>\n          ${numberControl("posts2x2","0")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label"># 3x3 Posts to Replace</label>\n          ${numberControl("posts3x3","0")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label"># 2x2 Posts to Realign</label>\n          ${numberControl("postsRealign2x2","0")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label"># 3x3 Posts to Realign</label>\n          ${numberControl("postsRealign3x3","0")}\n        </div>\n        <div class="sp-field col-3">\n          <label class="sp-label"># Walk Gates</label>\n          ${numberControl("walkGates","0")}\n        </div>\n        <div class="sp-field col-12" data-wg-wrap style="display:none">\n          <div class="sp-grid">\n            <div class="sp-field col-3">\n              <label class="sp-label"># Walk Gates to Realign</label>\n              ${numberControl("walkGatesRealign","0")}\n            </div>\n            <div class="sp-field col-3">\n              <label class="sp-label"># Walk Gate Hardware Replacements</label>\n              ${numberControl("walkGatesHardware","0")}\n            </div>\n            <div class="sp-field col-6" data-wg-hw-wrap style="display:none">\n              <div class="sp-grid">\n                <div class="sp-field col-6">\n                  <label class="sp-label">Latch Type</label>\n                  <select class="sp-select" data-field="walkLatch">${createSelect(GATE.latchTypes)}</select>\n                </div>\n                <div class="sp-field col-6">\n                  <label class="sp-label">Hinges</label>\n                  <select class="sp-select" data-field="walkHinges">${createSelect(GATE.hingeTypes)}</select>\n                </div>\n              </div>\n            </div>\n            <div class="sp-field col-3">\n              <label class="sp-label"># Walk Gates to Rebuild</label>\n              ${numberControl("walkGatesRebuild","0")}\n            </div>\n            <div class="sp-field col-12" data-wg-rebuild-wrap style="display:none">\n              <div class="sp-grid">\n                <div class="sp-field col-3">\n                  <label class="sp-label">Gate Frame Size</label>\n                  <select class="sp-select" data-field="walkRebuildFrame">${createSelect(SEED.railSize)}</select>\n                </div>\n                <div class="sp-field col-3">\n                  <label class="sp-label">Gate Picket Size</label>\n                  <select class="sp-select" data-field="walkRebuildPicket">${createSelect(SEED.picketSize)}</select>\n                </div>\n                <div class="sp-field col-3">\n                  <label class="sp-label">Latch Type</label>\n                  <select class="sp-select" data-field="walkRebuildLatch">${createSelect(GATE.latchTypes)}</select>\n                </div>\n                <div class="sp-field col-3">\n                  <label class="sp-label">Hinges</label>\n                  <select class="sp-select" data-field="walkRebuildHinges">${createSelect(GATE.hingeTypes)}</select>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="sp-field col-12">\n          <label class="sp-label">Notes (section-specific)</label>\n          <textarea class="sp-textarea" data-field="notes" placeholder="Any custom notes for this section..."></textarea>\n        </div>\n      </div>\n    </div>`}function addSection(e={}){syncStateFromDOM();const t=uid();state.sections.push({id:t,collapsed:false,railsCount:2,rails:[{size:SEED.railSize[0],stacked:false,size2:SEED.railSize[0],patches:0,replacements:0},{size:SEED.railSize[0],stacked:false,size2:SEED.railSize[0],patches:0,replacements:0}],postSize:"2x2",postsRealign2x2:0,postsRealign3x3:0,walkGates:0,walkGatesRealign:0,walkGatesHardware:0,walkGatesRebuild:0,walkLatch:GATE.latchTypes&&GATE.latchTypes[0]||"Gravity Latch",walkHinges:GATE.hingeTypes&&GATE.hingeTypes[0]||"Door Hinges",walkRebuildFrame:SEED.railSize[0],walkRebuildPicket:SEED.picketSize[0],walkRebuildLatch:GATE.latchTypes&&GATE.latchTypes[0]||"Gravity Latch",walkRebuildHinges:GATE.hingeTypes&&GATE.hingeTypes[0]||"Door Hinges",...e});render()}function duplicateSection(e){syncStateFromDOM();const t=state.sections.find(t=>t.id===e);if(!t)return;const n=JSON.parse(JSON.stringify(t));n.id=uid(),n.collapsed=false,state.sections.push(n),render()}function removeSection(e){syncStateFromDOM(),state.sections=state.sections.filter(t=>t.id!==e),render()}function readSectionFromDOM(e){const t=e.getAttribute("data-id");function n(t){const n=e.querySelector(`[data-field="${t}"]`);if(!n)return"";if(n.classList.contains("sp-number"))return parseInt(n.querySelector("input").value||"0",10)||0;return"checkbox"===n.type?!!n.checked:"INPUT"===n.tagName||"TEXTAREA"===n.tagName||"SELECT"===n.tagName?n.value:""}const a=parseInt(n("railsCount")||"2",10),i=[];for(let e=0;e<a;e++)i.push({size:n(`railSize_${e}`),stacked:!!n(`railStacked_${e}`),size2:n(`railSize2_${e}`),patches:n(`railPatches_${e}`),replacements:n(`railRepl_${e}`)});return{id:t,label:n("label").trim(),style:n("style"),height:n("height"),postSize:n("postSize"),railsCount:a,rails:i,railSize:i[0]?.size||"",railStacked:!!i[0]?.stacked,railSize2:i[0]?.size2||"",picketSize:n("picketSize"),picketHeight:n("picketHeight"),puppy:n("puppy"),painting:n("painting"),length:n("length"),hardscape:n("hardscape"),trim:n("trim"),wiPickets:n("wiPickets"),posts2x2:n("posts2x2"),posts3x3:n("posts3x3"),postsRealign2x2:n("postsRealign2x2"),postsRealign3x3:n("postsRealign3x3"),walkGates:n("walkGates"),walkGatesRealign:n("walkGatesRealign"),walkGatesHardware:n("walkGatesHardware"),walkGatesRebuild:n("walkGatesRebuild"),walkLatch:n("walkLatch"),walkHinges:n("walkHinges"),walkRebuildFrame:n("walkRebuildFrame"),walkRebuildPicket:n("walkRebuildPicket"),walkRebuildLatch:n("walkRebuildLatch"),walkRebuildHinges:n("walkRebuildHinges"),notes:n("notes").trim()}}function syncStateFromDOM(){const e=$$(".sp-card",sectionsEl);if(!e.length)return;const t=e.map(readSectionFromDOM);t.forEach(e=>{const t=state.sections.find(t=>t.id===e.id);t&&"collapsed"in t&&(e.collapsed=t.collapsed)}),state.sections=t}function writeSectionToDOM(e,t){function n(t,n){const a=e.querySelector(`[data-field="${t}"]`);a&&(a.classList.contains("sp-number")?a.querySelector("input").value=null!=n?n:"":"checkbox"===a.type?a.checked=!!n:"SELECT"===a.tagName||"INPUT"===a.tagName||"TEXTAREA"===a.tagName&&(a.value=null!=n?n:""))}n("label",t.label||""),n("style",t.style||SEED.style[0]),n("height",t.height||"4ft"),n("postSize",t.postSize||"2x2"),n("railsCount",t.railsCount||2),renderRailsControls(e,t),n("picketSize",t.picketSize||SEED.picketSize[0]),n("picketHeight",t.picketHeight||""),n("puppy",t.puppy||SEED.puppy[0]),n("painting",t.painting||"Paint Section"),n("length",t.length||""),n("hardscape",t.hardscape||""),n("trim",t.trim||""),n("wiPickets",t.wiPickets||""),n("posts2x2",t.posts2x2||""),n("posts3x3",t.posts3x3||""),n("postsRealign2x2",t.postsRealign2x2||""),n("postsRealign3x3",t.postsRealign3x3||""),n("walkGates",t.walkGates||""),n("walkGatesRealign",t.walkGatesRealign||""),n("walkGatesHardware",t.walkGatesHardware||""),n("walkGatesRebuild",t.walkGatesRebuild||""),n("walkLatch",t.walkLatch||GATE.latchTypes&&GATE.latchTypes[0]||"Gravity Latch"),n("walkHinges",t.walkHinges||GATE.hingeTypes&&GATE.hingeTypes[0]||"Door Hinges"),n("walkRebuildFrame",t.walkRebuildFrame||SEED.railSize[0]),n("walkRebuildPicket",t.walkRebuildPicket||SEED.picketSize[0]),n("walkRebuildLatch",t.walkRebuildLatch||GATE.latchTypes&&GATE.latchTypes[0]||"Gravity Latch"),n("walkRebuildHinges",t.walkRebuildHinges||GATE.hingeTypes&&GATE.hingeTypes[0]||"Door Hinges"),n("notes",t.notes||"");const a=e.querySelector(".sp-toggle"),i=!!t.collapsed;e.classList.toggle("is-collapsed",i),a&&(a.textContent=i?"Expand":"Collapse",a.setAttribute("aria-expanded",(!i).toString()))}function railLabels(e){const t=parseInt(e||2,10);return 4===t?["Top Rail","Second Rail","Third Rail","Bottom Rail"]:3===t?["Top Rail","Middle Rail","Bottom Rail"]:["Top Rail","Bottom Rail"]}function renderRailsControls(e,t){const n=e.querySelector("[data-rails-row]");if(!n)return;$$("[data-rail-block]",n).forEach(e=>e.remove());const a=parseInt(null!=t.railsCount?t.railsCount:2,10),i=railLabels(a),l=Array.isArray(t.rails)?t.rails:[];n.style.setProperty("--rail-cols",`repeat(${a+1}, minmax(200px, 1fr))`),i.forEach((t,a)=>{const i=document.createElement("div");i.className="sp-field",i.setAttribute("data-rail-block","");const r=numberControl("railPatches_"+a,"0"),o=numberControl("railRepl_"+a,"0");i.innerHTML=`\n        <label class="sp-label">${t} Size</label>\n        <select class="sp-select" data-field="railSize_${a}">${createSelect(SEED.railSize)}</select>\n        <div class="sp-row" style="margin-top:6px">\n          <label class="sp-row" style="gap:6px; align-items:center">\n            <input type="checkbox" data-field="railStacked_${a}" />\n            <span>Stacked</span>\n          </label>\n        </div>\n        <div class="sp-field" data-if="railStacked_${a}" style="display:none; margin-top:6px">\n          <label class="sp-label">Second ${t} Size</label>\n          <select class="sp-select" data-field="railSize2_${a}">${createSelect(SEED.railSize)}</select>\n        </div>\n        <div class="sp-field" style="margin-top:6px">\n          <label class="sp-label"># Rail Patches (${t})</label>\n          ${r}\n        </div>\n        <div class="sp-field" style="margin-top:6px">\n          <label class="sp-label"># Full Rail Replacements (${t})</label>\n          ${o}\n        </div>\n      `,n.appendChild(i);const s=l[a]||{},d=e.querySelector(`[data-field="railSize_${a}"]`),c=e.querySelector(`[data-field="railStacked_${a}"]`),u=e.querySelector(`[data-field="railSize2_${a}"]`),p=e.querySelector(`[data-field="railPatches_${a}"]`),m=e.querySelector(`[data-field="railRepl_${a}"]`);d&&(d.value=s.size||SEED.railSize[0]),c&&(c.checked=!!s.stacked),u&&(u.value=s.size2||SEED.railSize[0]),p&&p.querySelector("input")&&(p.querySelector("input").value=s.patches||0),m&&m.querySelector("input")&&(m.querySelector("input").value=s.replacements||0);const g=e.querySelector(`[data-if="railStacked_${a}"]`);g&&c&&(g.style.display=c.checked?"block":"none")})}function attachRailsHandlers(e){const t=e.querySelector('[data-field="railsCount"]');t&&t.addEventListener("change",()=>{const n=e.getAttribute("data-id"),a=state.sections.find(e=>e.id===n)||{},i=parseInt(t.value||"2",10);a.railsCount=i,Array.isArray(a.rails)||(a.rails=[]);const l=railLabels(i);a.rails=l.map((e,t)=>a.rails[t]||{size:SEED.railSize[0],stacked:false,size2:SEED.railSize[0],patches:0,replacements:0}),renderRailsControls(e,a),attachNumberHandlers(e),persist()}),e.addEventListener("change",e=>{const t=e.target;if(!t)return;t.matches('input[data-field^="railStacked_"]')&&(()=>{const e=t.getAttribute("data-field"),n=document.querySelector(`[data-if="${e}"]`);n&&(n.style.display=t.checked?"block":"none")})(),persist()})}function attachNumberHandlers(e){$$(".sp-number",e).forEach(t=>{const n=$("input",t);$$(".sp-step",t).forEach(t=>{t.addEventListener("click",()=>{const a=parseInt(t.getAttribute("data-dir"),10),i=parseInt(n.value||"0",10)||0,l=parseInt(n.getAttribute("min")||"0",10)||0,r=Math.max(l,i+a);n.value=r,updateWalkGateConditional(e),persist()})}),n.addEventListener("change",()=>{const t=parseInt(n.value||"0",10)||0,a=parseInt(n.getAttribute("min")||"0",10)||0;n.value=Math.max(a,t),updateWalkGateConditional(e),persist()})})}function updateWalkGateConditional(e){const t=e=>{const t=e.querySelector(`.sp-number[data-field="${e}"] input`);return parseInt(t&&t.value||"0",10)||0},n=t("walkGates"),a=t("walkGatesHardware"),i=t("walkGatesRebuild"),l=e.querySelector("[data-wg-wrap]");l&&(l.style.display=n>0?"block":"none");const r=e.querySelector("[data-wg-hw-wrap]");r&&(r.style.display=n>0&&a>0?"block":"none");const o=e.querySelector("[data-wg-rebuild-wrap]");o&&(o.style.display=n>0&&i>0?"block":"none")}function render(){const e=document.getElementById("sp-sections");e.innerHTML="",state.sections.forEach((t,n)=>{const a=document.createElement("div");a.innerHTML=sectionTemplate(t.id,n);const i=a.firstElementChild;e.appendChild(i),writeSectionToDOM(i,t),attachNumberHandlers(i),attachRailsHandlers(i),updateWalkGateConditional(i);const l=$(".sp-card-title",i),r=i.querySelector('[data-field="label"]');function o(){const e=(r.value||"").trim();l.textContent=`Section ${n+1}${e?" - "+e:""}`}o(),r.addEventListener("input",o),$(".sp-del",i).addEventListener("click",()=>{removeSection(t.id),persist()}),$(".sp-dup",i).addEventListener("click",()=>{duplicateSection(t.id),persist()});const s=$(".sp-toggle",i);s&&s.addEventListener("click",()=>{const e=!i.classList.contains("is-collapsed");i.classList.toggle("is-collapsed",e),s.textContent=e?"Expand":"Collapse",s.setAttribute("aria-expanded",(!e).toString());const n=state.sections.find(e=>e.id===t.id);n&&(n.collapsed=e),persist()}),$$("input, select, textarea",i).forEach(e=>{e.addEventListener("input",()=>{persist()}),e.addEventListener("change",()=>{persist()})})})}function feetFromStr(e){const t=String(e||"").match(/(\d+)/);return t?parseInt(t[1],10):0}function styleFactor(e){return"Flat Top"===e?2:"Extended Picket"===e?1.75:1.5}function puppyAdj(e){return"Puppy Pickets"===e?.25:"Puppy Pickets w/ Finials"===e?.5:0}function addMat(e,t,n){n&&n>0&&(e[t]=(e[t]||0)+n)}function normalizeSize(e){return String(e||"").replace(/\u201D|”/g,'"').replace(/\u00BC|¼/g,"1/4").replace(/\u00BD|½/g,"1/2").replace(/\u00BE|¾/g,"3/4").trim()}const PRICE_FT={'1/2"':.57,'5/8"':.68,'3/4"':.74,'1"':1.07,'1x2"':1.65,'1 1/2"':1.46,'1 1/4"':1.46,'1 3/4"':2.57,'2x2"':2.57,'3x3"':6.00,'2"':2.57,'3"':6.00,'Flat Bar 1/4" x 1"':.58},PRICE_MISC={"Gravity Latch":5,"Short Pool Latch":80,"Tall Pool Latch":90,"Single Lock Box":5,"Double Lock Box":10,"Pair of Door Hinges":5,"Pair of Bat Wing Hinges":5,"Pair of Auto Close Hinges":50,"prefab gate panel":0},PRICE={paintGallon:50,paintCan:8,concrete:12,post2x2:{8:18,9:24}};function laborCost(e){return e<=0?0:1===e?350:2===e?600:3===e?800:800+200*(e-3)}function money(e){return Number(e||0).toLocaleString(void 0,{minimumFractionDigits:2,maximumFractionDigits:2})}const RATES={netTarget:.2,overhead:.08,commission:.25,cac:500,mcor:.2};function computeChargeRevenue(e){const t=e,n=RATES.netTarget,a=RATES.overhead,i=RATES.commission,l=RATES.cac,r=RATES.mcor,o=(1-n)*(1-i)-r-a;if(!(o>0))return{revenue:NaN,mode:"invalid"};const s=Math.max((1-n)*t/o,(t+100/n)/(1-i));if(!(r*s>l))return{revenue:s,mode:"percent"};const d=(1-n)*(1-i)-a;if(!(d>0))return{revenue:NaN,mode:"invalid"};const c=Math.max((((1-n)*t)+l)/d,(t+75/n)/(1-i));return{revenue:c,mode:"capped"}}function generateNotes(){syncStateFromDOM();const e=[],t={length:0,hardscape:0,trim:0,wiPickets:0,wiPatches:0,wiRails:0,posts2x2:0,posts3x3:0,postsRealign2x2:0,postsRealign3x3:0,walkGates:0,walkRealign:0,walkHardware:0,walkRebuild:0};state.sections.forEach((n,a)=>{const i=n.label?`Section ${a+1} - ${n.label}`:`Section ${a+1}`,l=n.picketHeight?`${n.picketSize} (height ${n.picketHeight} in)`:n.picketSize,r=Array.isArray(n.rails)&&n.rails.length?(()=>{const e=railLabels(n.railsCount||n.rails.length);return n.rails.slice(0,n.railsCount||n.rails.length).map((t,n)=>t&&t.stacked?`${e[n]}: ${t.size} + ${t.size2} (stacked)`:`${e[n]}: ${t.size}`).join("; ")})():n.railStacked?`${n.railSize} + ${n.railSize2} (stacked)`:n.railSize,o=(n.rails||[]).slice(0,n.railsCount||0).reduce((e,t)=>e+(parseInt(t?.patches||0,10)||0),0),s=(n.rails||[]).slice(0,n.railsCount||0).reduce((e,t)=>e+(parseInt(t?.replacements||0,10)||0),0);e.push(`${i}`),e.push(`- Style: ${n.style}`),e.push(`- Height: ${n.height}`),e.push(`- Rails: ${r}`),e.push(`- Picket: ${l}`),e.push(`- Puppy Pickets: ${n.puppy}`),e.push(`- Painting: ${n.painting||"Paint Section"}`),e.push(`- Length: ${numOrDash(n.length)} ft`),n.hardscape>0&&e.push(`- Over hardscape: ${n.hardscape} lf`),n.trim>0&&e.push(`- Trim: ${n.trim} lf`);const d=e=>parseInt(e||0,10)||0;e.push(`- Repairs:`),e.push(`  - Pickets to replace: ${d(n.wiPickets)}`),e.push(`  - Rail patches: ${o}`),e.push(`  - Full rail replacements: ${s}`),e.push(`  - 2x2 posts to replace: ${d(n.posts2x2)}`),e.push(`  - 3x3 posts to replace: ${d(n.posts3x3)}`),e.push(`  - 2x2 posts to realign: ${d(n.postsRealign2x2)}`),e.push(`  - 3x3 posts to realign: ${d(n.postsRealign3x3)}`);const c=d(n.walkGates),u=d(n.walkGatesRealign),p=d(n.walkGatesHardware),m=d(n.walkGatesRebuild);(c||u||p||m)&&(e.push(`- Walk gates: ${c}`),u&&e.push(`  - Realign: ${u}`),p&&e.push(`  - Hardware replacements: ${p} (Latch: ${n.walkLatch||"-"}, Hinges: ${n.walkHinges||"-"})`),m&&e.push(`  - Rebuild: ${m} (Frame: ${n.walkRebuildFrame}, Pickets: ${n.walkRebuildPicket}, Latch: ${n.walkRebuildLatch}, Hinges: ${n.walkRebuildHinges})`)),n.notes&&e.push(`- Notes: ${n.notes}`),e.push(""),t.length+=d(n.length),t.hardscape+=d(n.hardscape),t.trim+=d(n.trim),t.wiPickets+=d(n.wiPickets),t.wiPatches+=o,t.wiRails+=s,t.posts2x2+=d(n.posts2x2),t.posts3x3+=d(n.posts3x3),t.postsRealign2x2+=d(n.postsRealign2x2),t.postsRealign3x3+=d(n.postsRealign3x3),t.walkGates+=c,t.walkRealign+=u,t.walkHardware+=p,t.walkRebuild+=m});if(state.sections.length){const n=t;e.push("TOTALS"),e.push(`- Sections: ${state.sections.length}`),e.push(`- Length: ${n.length} ft`),n.hardscape&&e.push(`- Over hardscape: ${n.hardscape} lf`),n.trim&&e.push(`- Trim: ${n.trim} lf`),n.wiPickets&&e.push(`- Pickets to replace: ${n.wiPickets}`),n.wiPatches&&e.push(`- Rail patches: ${n.wiPatches}`),n.wiRails&&e.push(`- Full rail replacements: ${n.wiRails}`),n.posts2x2&&e.push(`- 2x2 posts: ${n.posts2x2}`),n.posts3x3&&e.push(`- 3x3 posts: ${n.posts3x3}`),n.postsRealign2x2&&e.push(`- 2x2 posts to realign: ${n.postsRealign2x2}`),n.postsRealign3x3&&e.push(`- 3x3 posts to realign: ${n.postsRealign3x3}`),n.walkGates&&e.push(`- Walk gates: ${n.walkGates}`),n.walkRealign&&e.push(`- Walk gates to realign: ${n.walkRealign}`),n.walkHardware&&e.push(`- Walk gate hardware replacements: ${n.walkHardware}`),n.walkRebuild&&e.push(`- Walk gates to rebuild: ${n.walkRebuild}`)}let n=0,a=0,i=0;let l=(t.wiPickets*12+t.wiPatches*20+t.wiRails*30+t.posts2x2*60+t.posts3x3*90+(t.postsRealign2x2+t.postsRealign3x3)*30)/60;l+=t.walkRealign*1+t.walkHardware*1+t.walkRebuild*3;const r=state.sections.reduce((e,t)=>{if("Paint Section"!==t.painting)return e;const n=parseInt(t.length||0,10)||0;if(!n)return e;const a=styleFactor(t.style)-puppyAdj(t.puppy);return e+n/8/Math.max(1,a)},0),o=state.sections.reduce((e,t)=>e+("Paint Section"===t.painting?(parseInt(t.hardscape||0,10)||0):0),0),s=state.sections.reduce((e,t)=>e+("Paint Section"===t.painting?(parseInt(t.trim||0,10)||0):0),0);l+=r+o/20+s/50;const d=Math.ceil(l/8),c=d>0?`1 day for ${d} ${1===d?"guy":"guys"}`:"TBD",u={};const p={};state.sections.forEach(e=>{const t=feetFromStr(e.height),n=Math.max(8,t+3),a=parseInt(e.posts2x2||0,10)||0;a>0&&(p[n]=(p[n]||0)+a)}),Object.keys(p).sort((e,t)=>parseInt(e,10)-parseInt(t,10)).forEach(e=>{addMat(u,`2x2x${e} posts`,p[e])});const m={};state.sections.forEach(e=>{const t=parseInt(e.posts3x3||0,10)||0;if(!t)return;const n=feetFromStr(e.height)+3,a=Math.max(1,Math.floor(12/Math.max(1,n))),i=Math.ceil(t/a);m[n]=(m[n]||0)+i});let g=0;Object.values(m).forEach(e=>{g+=e}),g>0&&addMat(u,"3x3x12 raw steel",g);const f=t.posts2x2+t.posts3x3+Math.ceil((t.postsRealign2x2+t.postsRealign3x3)*.5)+t.walkRealign;const h={},x={};state.sections.forEach(e=>{const t=parseInt(e.walkGatesHardware||0,10)||0,n=parseInt(e.walkGatesRebuild||0,10)||0;t>0&&(e.walkLatch&&(h[e.walkLatch]=(h[e.walkLatch]||0)+t),e.walkHinges&&(x[e.walkHinges]=(x[e.walkHinges]||0)+t)),n>0&&(e.walkRebuildLatch&&(h[e.walkRebuildLatch]=(h[e.walkRebuildLatch]||0)+n),e.walkRebuildHinges&&(x[e.walkRebuildHinges]=(x[e.walkRebuildHinges]||0)+n),(()=>{const t=e.walkRebuildFrame||"",n=e.walkRebuildPicket||"",a=normalizeSize(t),i=normalizeSize(n);"1\""===a&&('1/2"'===i||'5/8"'===i)?(addMat(u,"prefab gate panel",n>0?1:0),addMat(u,`12ft rail sticks (${t})`,n*2)):(addMat(u,`12ft rail sticks (${t})`,n*2),addMat(u,`12ft picket sticks (${n})`,n*2))})()});Object.keys(h).forEach(e=>addMat(u,e,h[e]));const y=e=>"Door Hinges"===e?"Pair of Door Hinges":"Bat Wing Hinges"===e?"Pair of Bat Wing Hinges":"Auto Close Hinges"===e?"Pair of Auto Close Hinges":e;Object.keys(x).forEach(e=>addMat(u,y(e),x[e])),addMat(u,"Maximizer bags of concrete",f);const v={};state.sections.forEach(e=>{const t=parseInt(e.wiPickets||0,10)||0;if(!t)return;let n=parseInt(e.picketHeight||0,10)||0;if(n<=0){const t=feetFromStr(e.height);t>0&&(n=12*t)}n<=0&&(n=54);const a=Math.max(1,Math.floor(144/n)),i=Math.ceil(t/a),l=e.picketSize;v[l]=(v[l]||0)+i}),Object.entries(v).forEach(([e,t])=>{addMat(u,`12ft picket sticks (${e})`,t)});const S={},b={},E={};function M(e,t,n){e[t]=(e[t]||0)+(n||0)}state.sections.forEach(e=>{const t=e.railsCount||(e.rails||[]).length||0;for(let n=0;n<t;n++){const t=(e.rails||[])[n]||{},a=parseInt(t.patches||0,10)||0,i=parseInt(t.replacements||0,10)||0;a>0&&(M(b,t.size,a),t.stacked&&M(b,t.size2,a)),i>0&&(M(E,t.size,i),t.stacked&&M(E,t.size2,i))}}),Object.entries(E).forEach(([e,t])=>{t>0&&M(S,e,t)}),Object.entries(b).forEach(([e,t])=>{const n=E[e]||0,a=Math.max(0,(t||0)-n);a>0&&M(S,e,Math.ceil(a/6))}),Object.keys(S).forEach(e=>{addMat(u,`12ft rail sticks (${e})`,S[e])}),n=0,a=0,i=0;let L=0,w=0;state.sections.forEach(e=>{const t=parseInt(e.length||0,10)||0;t&&("Paint Section"===e.painting?n+=t:"Spot Paint Welds"===e.painting&&(w+=t))}),n=n,a=Math.ceil(n/100),a>0&&(i+=Math.ceil(.5*a)),w>0&&(i+=Math.max(1,Math.ceil(.5*Math.ceil(w/100)))),a>0&&addMat(u,"gallons of gloss black paint",a),i>0&&addMat(u,"spray cans (gloss black)",i);let C=false;const P=[],R=Object.entries(u);R.forEach(([e,t])=>{if(Object.prototype.hasOwnProperty.call(PRICE_MISC,e)){const n=PRICE_MISC[e]||0,a=t*n;L+=a,P.push(`  - ${e}: ${t} x $${money(n)} = $${money(a)}`)}}),a>0&&(()=>{const e=a*PRICE.paintGallon;L+=e,P.push(`  - Paint (gallons): ${a} x $${money(PRICE.paintGallon)} = $${money(e)}`)})(),i>0&&(()=>{const e=i*PRICE.paintCan;L+=e,P.push(`  - Paint (spray cans): ${i} x $${money(PRICE.paintCan)} = $${money(e)}`)})();const O=u["Maximizer bags of concrete"]||0;O>0&&(()=>{const e=O*PRICE.concrete;L+=e,P.push(`  - Concrete (Maximizer): ${O} x $${money(PRICE.concrete)} = $${money(e)}`)})();const k={};Object.keys(u).forEach(e=>{const t=e.match(/^2x2x(\d+)\s+posts$/);t&&(k[t[1]]=(k[t[1]]||0)+u[e])}),Object.entries(k).forEach(([e,t])=>{const n=parseInt(e,10)||0;let a=PRICE.post2x2[n];null==a&&(a=(PRICE_FT['2x2"']||0)*n);const i=t*(a||0);0===(a||0)&&(C=true),L+=i,P.push(`  - 2x2x${e} posts: ${t} x $${money(a)} = $${money(i)}`)});const T=Object.keys(u).reduce((e,t)=>{const n=t.match(/^3x3x12 raw steel/);return e+(n?u[t]:0)},0);if(T>0){const e=12*(PRICE_FT['3x3"']||0),t=T*e;L+=t,P.push(`  - 3x3 raw steel sticks: ${T} x 12ft x $${money(PRICE_FT['3x3"']||0)}/ft = $${money(t)}`)}const F=/^12ft picket sticks \((.+?)\)/;R.forEach(([e,t])=>{const n=e.match(F);if(!n)return;const a=normalizeSize(n[1]),i=PRICE_FT[a]||0,l=t*12*i;0===i&&(C=true),L+=l,P.push(`  - 12ft picket sticks ${a}: ${t} x 12ft x $${money(i)}/ft = $${money(l)}`)});const H=/^12ft rail sticks \((.+?)\)/;R.forEach(([e,t])=>{const n=e.match(H);if(!n)return;const a=normalizeSize(n[1]),i=PRICE_FT[a]||0,l=t*12*i;0===i&&(C=true),L+=l,P.push(`  - 12ft rail sticks ${a}: ${t} x 12ft x $${money(i)}/ft = $${money(l)}`)});const A=laborCost(d),B=A+L,j=computeChargeRevenue(B),N=j&&isFinite(j.revenue)?j.revenue:NaN,_=isFinite(N)?RATES.commission*((1-RATES.overhead)*N-B):NaN;const I=[];I.push("JOB DURATION"),I.push(`- ${c}`),I.push(""),I.push("MATERIALS"),Object.keys(u).sort((e,t)=>e.localeCompare(t)).forEach(e=>{I.push(`- ${u[e]}x ${e}`)}),I.push(""),I.push("GO BAG (bring in addition to above)");const z=new Set(state.sections.map(e=>(e.postSize||"").trim()).filter(Boolean)),q=Math.max(0,...state.sections.map(e=>feetFromStr(e.height))),D=Math.max(8,q>0?q+3:8);0===z.size&&z.add("2x2"),z.forEach(e=>{"2x2"===e?I.push(`- 3x 2x2x${D} posts`):"3x3"===e?I.push(`- 3x 3x3x12 raw steel (for posts)`):I.push(`- 3x ${e} posts`)}),I.push(`- 3x Maximizer bags of concrete`),I.push("- 1x gallon of gloss black paint"),I.push("- 1x spray can (gloss black)");const G=new Set;state.sections.forEach(e=>{const t=e.railsCount||(e.rails||[]).length||0;for(let n=0;n<t;n++){const t=(e.rails||[])[n]||{};t&&t.size&&G.add(t.size),t&&t.stacked&&t.size2&&G.add(t.size2)}});const J=new Set(state.sections.map(e=>e.picketSize).filter(Boolean));G.forEach(e=>I.push(`- 3x 12ft rail sticks (${e})`)),J.forEach(e=>I.push(`- 3x 12ft picket sticks (${e})`)),I.push(""),I.push("SCOPE (Totals)"),t.wiPickets>0&&I.push(`- Pickets to replace: ${t.wiPickets}`),t.wiPatches>0&&I.push(`- Rail patches: ${t.wiPatches}`),t.wiRails>0&&I.push(`- Full rail replacements: ${t.wiRails}`),t.posts2x2>0&&I.push(`- 2x2 posts to replace: ${t.posts2x2}`),t.posts3x3>0&&I.push(`- 3x3 posts to replace: ${t.posts3x3}`),t.postsRealign2x2>0&&I.push(`- 2x2 posts to realign: ${t.postsRealign2x2}`),t.postsRealign3x3>0&&I.push(`- 3x3 posts to realign: ${t.postsRealign3x3}`),t.walkGates>0&&I.push(`- Walk gates: ${t.walkGates}`),t.walkRealign>0&&I.push(`- Walk gates to realign: ${t.walkRealign}`),t.walkHardware>0&&I.push(`- Walk gate hardware replacements: ${t.walkHardware}`),t.walkRebuild>0&&I.push(`- Walk gates to rebuild: ${t.walkRebuild}`),n>0&&I.push(`- Scrape off loose rust and debris, then hand paint ${n} ft of fence`),notesSubEl&&(notesSubEl.value=I.join("\n"));const K=[];K.push("ESTIMATED COST"),K.push(`- Labor: $${money(A)} (${d} ${1===d?"guy":"guys"})`),K.push(`- Materials: $${money(L)}`),P.forEach(e=>K.push(e)),K.push(`- Total: $${money(A+L)}`),C&&K.push("  - Note: Some sizes have no price mapping and were counted as $0."),K.push(""),K.push("WHAT TO CHARGE"),isFinite(N)?(K.push(`- Price to charge: $${money(N)}`),K.push(`- Commission (per formula): $${money(_)}`)):K.push("⚠️ Pricing inputs produce an invalid result. Check RATES (commission, net target, overhead, MCOR, CAC).");const Q=e.indexOf("TOTALS"),U=Q>=0?[...e.slice(Q),"",...e.slice(0,Q)]:e,V=[...U,"",...K];notesEl.value=V.join("\n"),outputEl.style.display="grid",(e=>{e.scrollIntoView({behavior:"smooth",block:"start"})})(outputEl),persist()}function numOrDash(e){const t=parseInt(e,10);return isNaN(t)?"—":t}function copyNotes(){notesEl.select(),document.execCommand("copy");const e=document.getElementById("sp-copy"),t=e.textContent;e.textContent="Copied!",setTimeout(()=>e.textContent=t,1200)}function copySubNotes(){if(!notesSubEl)return;notesSubEl.select(),document.execCommand("copy");const e=document.getElementById("sp-copy-sub"),t=e.textContent;e.textContent="Copied!",setTimeout(()=>e.textContent=t,1200)}const KEY="sp_scope_v1";function persist(){try{syncStateFromDOM(),localStorage.setItem(KEY,JSON.stringify(state.sections))}catch(e){}}function restore(){try{const e=localStorage.getItem(KEY);if(!e)return false;const t=JSON.parse(e);if(!Array.isArray(t)||!t.length)return false;state.sections=t.map(e=>{const t=e.railsCount||Array.isArray(e.rails)?e.rails.length:2,n=(e.rails||[]).map(e=>({size:e.size,stacked:!!e.stacked,size2:e.size2,patches:parseInt(e.patches||0,10)||0,replacements:parseInt(e.replacements||0,10)||0}));return(parseInt(e.wiRails||0,10)||0)>0&&n.every(e=>(parseInt(e.replacements||0,10)||0)===0)&&(n[0]&&(n[0].replacements=parseInt(e.wiRails,10)||0)),{...e,id:uid(),railsCount:t,rails:n,postSize:e.postSize||"2x2",postsRealign2x2:parseInt(e.postsRealign2x2||e.postsRealign||0,10)||0,postsRealign3x3:parseInt(e.postsRealign3x3||0,10)||0,walkGates:parseInt(e.walkGates||0,10)||0,walkGatesRealign:parseInt(e.walkGatesRealign||0,10)||0,walkGatesHardware:parseInt(e.walkGatesHardware||0,10)||0,walkGatesRebuild:parseInt(e.walkGatesRebuild||0,10)||0,walkLatch:e.walkLatch||GATE.latchTypes&&GATE.latchTypes[0]||"Gravity Latch",walkHinges:e.walkHinges||GATE.hingeTypes&&GATE.hingeTypes[0]||"Door Hinges",walkRebuildFrame:e.walkRebuildFrame||SEED.railSize[0],walkRebuildPicket:e.walkRebuildPicket||SEED.picketSize[0],walkRebuildLatch:e.walkRebuildLatch||GATE.latchTypes&&GATE.latchTypes[0]||"Gravity Latch",walkRebuildHinges:e.walkRebuildHinges||GATE.hingeTypes&&GATE.hingeTypes[0]||"Door Hinges"}}),render();return true}catch(e){return false}}function resetAll(){if(!confirm("Clear all sections?"))return;state.sections=[],localStorage.removeItem(KEY),render(),outputEl.style.display="none"}document.getElementById("sp-add").addEventListener("click",()=>{addSection(),persist()}),document.getElementById("sp-complete").addEventListener("click",generateNotes),document.getElementById("sp-copy").addEventListener("click",copyNotes),document.getElementById("sp-copy-sub").addEventListener("click",copySubNotes),document.getElementById("sp-reset").addEventListener("click",resetAll),restore()||addSection()})();